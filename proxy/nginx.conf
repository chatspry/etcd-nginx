user www-data;
worker_processes 1;
daemon off;

events {
	worker_connections 1024;
	multi_accept on;
}

http {

	sendfile on;
	tcp_nopush on;
	tcp_nodelay off;
	server_tokens off;

	large_client_header_buffers 8 16k;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	access_log /dev/stdout;
	error_log /dev/stdout;

	gzip on;
	gzip_disable "msie6";
	gzip_proxied any;
	gzip_buffers 16 8k;
	gzip_types text/plain text/css text/javascript text/xml application/json application/x-javascript application/xml application/xml+rss;
{{ range split (getenv "UPSTREAMS") "," }}
	upstream {{.}} {
		{{ $servers := printf "/servers/%s/%s" (getenv "CLUSTER") . }}{{ if ls $servers | len | eq 0 }}
		server 127.0.0.1:8080 fail_timeout=0;{{ else }}
		{{ range printf "%s/%s" $servers "*" | gets }}{{ $data := json .Value }}server {{ $data.host }}{{ range $key, $value := $data.config }} {{ $key }}={{ $value }}{{ end }};
		server 127.0.0.1:8080 backup;{{ end }}
		{{ end }}
	}
{{ end }}{{ range split (getenv "SITES") "," }}{{ with printf "/sites/%s" . }}{{ if exists . }}{{ with getv . | json }}
	server {
		listen {{ .listen }};
		server_name {{ .server_name }};
		{{ range .locations }}
		location / {
			proxy_pass http://{{ .upstream }};{{ range .includes }}
			include /etc/nginx/include/{{ . }}.conf;{{ end }}
		}
		{{ end }}
	}
{{ end }}{{ end }}{{ end }}{{ end }}
	# Default web service when there are no hosts behind the proxy.
	server {

		listen 80;
		server_name _;

		include /etc/nginx/include/default/error-pages.conf;

		root /etc/nginx/static/default;

	}

	# Service used as a backup by upstreams with no accessible hosts.
	server {

		# Only connections from localhost are allowed since it should not be accessed directly by the outside world.
		allow 127.0.0.1/32;
		deny all;

		listen 8080;
		server_name _;

		access_log /dev/null;
		error_log /dev/null;

		include /etc/nginx/include/default/error-pages.conf;

		root /etc/nginx/static/default;

	}
}
